import urllib.parse
import requests

main_api= "https://www.mapquestapi.com/directions/v2/route?"

key = "GPYsRjyWOQygipz9vR3md9PxIwGlhFBj"

while True:
    orig = input("Starting Location: ")
    if orig == "quit" or orig == "q":
        break
    dest = input ("Destination: ")
    if dest == "quit" or dest == "q":
        break


    url = main_api + urllib.parse.urlencode ({"key":key, "from":orig, "to":dest})
    print("URL: " + (url))

    


    json_data = requests.get(url).json()
    json_status = json_data["info"]["statuscode"]
   

    if json_status == 0:
        print ("API Status: " + str(json_status) + " = A successful route call. \n")
        print ("=============================================")
        print ("Directions from " + (orig) + " to " +(dest))
        print ("Trip Duration:  " + (json_data["route"]["formattedTime"]))
        print ("Kilometers:     " + str("{:.2f}".format((json_data["route"]["distance"])*1.61)))   
        print ("=============================================")
     
        for each in json_data["route"]["legs"][0]["maneuvers"]:
            print((each["narrative"]) + " (" + str("{:.2f})".format((each["distance"])*1.61)+ " km)"))

    if json_status == 0:
        print ("API Status: " + str(json_status) + " = A successful route call. \n")
        print ("=============================================")
        print ("Directions from " + (orig) + " to " +(dest))
        print ("Trip Duration:  " + (json_data["route"]["formattedTime"]))
        print ("Kilometers:     " + str("{:.2f}".format((json_data["route"]["distance"])*1.61)))   
        print ("=============================================")
     
        for each in json_data["route"]["legs"][0]["maneuvers"]:
            print((each["narrative"]) + " (" + str("{:.2f})".format((each["distance"])*1.61)+ " km)"))
        
        print ("==============================================\n")
    elif json_status == 402:
        print("*************************************************")
        print("Status Code: " + str(json_status) + "; Invalid user inputs for one or both locations.")
        print("*************************************************\n")
    elif json_status == 611:
        print("*************************************************")
        print("Status Code: " + str(json_status) + "; Missing an entry for one or both locations.")
        print("*************************************************\n")
    else:
        print("***********************************************************************")
        print("For Statuss Code: " + str(json_status)+ "; Refer to:")
        print("https://developer.mapquest.com/documentaion/directions-api/status-codes")
        print("*********************************************************************\n")
    elif json_status == 612:
        print("*************************************************")
        print("Status Code: " + str(json_status) + "; Location not Found.")
        print("*************************************************\n")
    elif json_status == 500:
        print("*************************************************")
        print("Status Code: " + str(json_status) + "; Error Processing Request.")
        print("*************************************************\n")
    else:
        print("***********************************************************************")
        print("For Statuss Code: " + str(json_status)+ "; Refer to:")
        print("https://developer.mapquest.com/documentaion/directions-api/status-codes")
        print("*********************************************************************\n")
        
   kilometer = (json_data["route"]["distance"]*1.61)

    if kilometer <= 322:
        print("A car will be the best form of travel for this trip.")
        print ("===================================================")

    elif kilometer <= 805:
        print("A train will be the best form of travel for this trip.")
        print ("=====================================================")

    elif kilometer > 805:
        print("An airplance will be the best form of travel for this trip.")
        print ("==========================================================")
    
    
    distance_km = json_data["route"]["distance"]
    distance_miles = distance_km * 0.621371
    uber_cost = distance_miles * 2.00 + 7.00
    print("Kilometers:     " + str("{:.2f}".format(distance_km)))
    print("Miles:          " + str("{:.2f}".format(distance_miles)))
    print("Trip Cost in Uber is:           $" + str("{:.2f}".format(uber_cost)))
    print("=============================================")  
   
 


 
