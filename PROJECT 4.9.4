import urllib.parse
import requests

main_api= "https://www.mapquestapi.com/directions/v2/route?"

key = "GPYsRjyWOQygipz9vR3md9PxIwGlhFBj"
def main():
    while True:
        print("Menu")
        print("1. Destination Directions")
        print("2. Weather Info" )
        choice = input("What is your Choice:")
        if choice == "1":
            directions()
        elif choice == "2":
            weather()
        else:
            print("Invalid choice")
def directions():
    while True:
                orig = input("Starting Location: ")
                if orig == "quit" or orig == "q":
                    break
                dest = input ("Destination: ")
                if dest == "quit" or dest == "q":
                    break


                url = main_api + urllib.parse.urlencode ({"key":key, "from":orig, "to":dest})
                print("URL: " + (url))

                


                json_data = requests.get(url).json()
                json_status = json_data["info"]["statuscode"]

                if json_status == 0:
                    print ("API Status: " + str(json_status) + " = A successful route call. \n")
                    print ("=============================================")
                    print ("Directions from " + (orig) + " to " +(dest))
                    print ("Trip Duration:  " + (json_data["route"]["formattedTime"]))
                    print ("Kilometers:     " + str("{:.2f}".format((json_data["route"]["distance"])*1.61)))  
                    kilometer = (json_data["route"]["distance"]*1.61)

                    if kilometer <= 322:
                        print("A car will be the best form of travel for this trip.")
                        totalkm = kilometer * 84
                        print(f"The total cost of this trip will be ${totalkm:.2f}")
                    elif kilometer <= 805:
                        print("A train will be the best form of travel for this trip.")
                        totalkm = kilometer * 114
                        print("The total cost of this trip will be ${totalkm:.2f}" )
                        print ("=============================================")
                    elif kilometer > 805:
                        print("An airplance will be the best form of travel for this trip.")
                        totalkm = kilometer * 42
                        print("The total cost of this trip will be ${totalkm:.2f}")
                        print ("=============================================")
                    
                
                    for each in json_data["route"]["legs"][0]["maneuvers"]:
                        print((each["narrative"]) + " (" + str("{:.2f}".format((each["distance"])*1.61)+ " km)"))
                    
                    print ("==============================================\n")
                elif json_status == 402:
                    print("*************************************************")
                    print("Status Code: " + str(json_status) + "; Invalid user inputs for one or both locations.")
                    print("*************************************************\n")
                elif json_status == 611:
                    print("*************************************************")
                    print("Status Code: " + str(json_status) + "; Missing an entry for one or both locations.")
                    print("*************************************************\n")
                else:
                    print("***********************************************************************")
                    print("For Statuss Code: " + str(json_status)+ "; Refer to:")
                    print("https://developer.mapquest.com/documentaion/directions-api/status-codes")
                    print("*********************************************************************\n")

def weather():
    while True:
        LOCATION = input("Location: ")
        if LOCATION == "quit" or LOCATION == "q":
            break
        url = f"http://www.mapquestapi.com/weather/v1/location/{LOCATION}?key={key}"
        print("URL: " + (url))
        response = requests.get(url)
        data = response.json()

        '''current_conditions = data["currentConditions"]
        temperature = current_conditions["temperature"]
        humidity = current_conditions["humidity"]
        wind_speed = current_conditions["windSpeed"]

        print(f"Current temperature: {temperature}")
        print(f"Humidity: {humidity}")
        print(f"Wind speed: {wind_speed}")
        '''
main()
            
